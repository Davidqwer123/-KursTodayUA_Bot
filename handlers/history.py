from aiogram import Router
from aiogram.types import Message, BufferedInputFile
from aiogram.filters import Command

from services.api_client import get_historical_rates
from services.chart_service import create_usd_chart

router = Router()


@router.message(Command('usd_history'))
async def usd_history_handler(message: Message):
    try:
        dates, rates = get_historical_rates()

        if not rates or len(rates) < 2:
            await message.answer('–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –¥–∞–Ω–∏—Ö –¥–ª—è –ø–æ–±—É–¥–æ–≤–∏ –≥—Ä–∞—Ñ—ñ–∫–∞')
            return

        # –û—Ç—Ä–∏–º—É—î–º–æ –≥—Ä–∞—Ñ—ñ–∫ —É –≤–∏–≥–ª—è–¥—ñ –±–∞–π—Ç—ñ–≤
        chart_buf = create_usd_chart(dates, rates)

        # –°—Ç–≤–æ—Ä—é—î–º–æ —Ñ–∞–π–ª, —è–∫–∏–π aiogram –º–æ–∂–µ –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏
        chart_file = BufferedInputFile(
            chart_buf.getvalue(), filename="usd_history.png"
        )

        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
        await message.answer_photo(photo=chart_file)

        # –§–æ—Ä–º—É—î–º–æ —Ç–µ–∫—Å—Ç–æ–≤–∏–π –æ–ø–∏—Å
        UA_MONTHS = {
            1: "—Å—ñ—á",
            2: "–ª—é—Ç",
            3: "–±–µ—Ä",
            4: "–∫–≤—ñ—Ç",
            5: "—Ç—Ä–∞–≤",
            6: "—á–µ—Ä–≤",
            7: "–ª–∏–ø",
            8: "—Å–µ—Ä–ø",
            9: "–≤–µ—Ä",
            10: "–∂–æ–≤—Ç",
            11: "–ª–∏—Å—Ç",
            12: "–≥—Ä—É–¥",
        }

        history_text = "üìä –ö—É—Ä—Å USD/UAH –∑–∞ –æ—Å—Ç–∞–Ω–Ω—ñ 7 –¥–Ω—ñ–≤:\n\n"
        for date, rate in zip(dates, rates):
            day = date.day
            month = UA_MONTHS[date.month]
            year = date.year
            history_text += f"‚Ä¢ {day:02d} {month} {year}: <b>{rate:.2f}</b> –≥—Ä–Ω\n"

        await message.answer(history_text, parse_mode='HTML')

    except Exception as e:
        await message.answer(f'‚ö†Ô∏è –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞: {str(e)}')
        raise
